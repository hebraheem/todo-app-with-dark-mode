[{"/Users/aple/Desktop/project/simple-todo-darkmode/src/index.js":"1","/Users/aple/Desktop/project/simple-todo-darkmode/src/App.js":"2","/Users/aple/Desktop/project/simple-todo-darkmode/src/components/SearchField.js":"3","/Users/aple/Desktop/project/simple-todo-darkmode/src/components/Task.js":"4","/Users/aple/Desktop/project/simple-todo-darkmode/src/context.js":"5","/Users/aple/Desktop/project/simple-todo-darkmode/src/components/Alert.js":"6"},{"size":300,"mtime":1608349535000,"results":"7","hashOfConfig":"8"},{"size":540,"mtime":1608350387000,"results":"9","hashOfConfig":"8"},{"size":3514,"mtime":1608375791000,"results":"10","hashOfConfig":"8"},{"size":1575,"mtime":1608373408000,"results":"11","hashOfConfig":"8"},{"size":528,"mtime":1608350421000,"results":"12","hashOfConfig":"8"},{"size":397,"mtime":1608343888000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"11cbev1",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/aple/Desktop/project/simple-todo-darkmode/src/index.js",[],["28","29"],"/Users/aple/Desktop/project/simple-todo-darkmode/src/App.js",[],"/Users/aple/Desktop/project/simple-todo-darkmode/src/components/SearchField.js",[],"/Users/aple/Desktop/project/simple-todo-darkmode/src/components/Task.js",["30","31"],"import React, {useState} from \"react\";\nimport \"../Task.css\";\nimport { useThemeContext } from \"../context\";\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { TiInputChecked } from \"react-icons/ti\";\n\n\nconst Task = ({ tasks, removeItem, editItem }) => {\n\n  const [checked, setChecked] =useState(false)\n  const { isDark, styles } = useThemeContext();\n\n  return (\n    <div className=\"tasks\">\n      <h3 style={{ color: isDark ? styles.textColor : \"black\" }}>My Task</h3>\n      {tasks.map((task) => {\n        const { id, title, time } = task;\n        return (\n          <>\n            <div\n              className=\"task\"\n              key={id}\n              style={{\n                backgroundColor: isDark ? styles.backgroundColor : \"#C9AFA0\",\n              }}\n            >\n              <div className=\"task_text\">\n                <p style={{ color: isDark ? styles.textColor : \"grey\" }}>{time}</p>\n                <h4 style={{ color: isDark ? styles.textColor : \"black\",  textDecorationLine: checked && \"line-through\"  }}>{title}</h4>\n              </div>\n              <div className=\"task_action\">\n                <button className=\"del_btn\" onClick={() => removeItem(id)}>\n                  <AiOutlineDelete />\n                </button>\n                <button className=\"edit_btn\" onClick={() => editItem(id)}>\n                  <FiEdit />\n                </button>\n              </div>\n            </div>\n            <div className=\"space\"></div>\n          </>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Task;\n","/Users/aple/Desktop/project/simple-todo-darkmode/src/context.js",[],"/Users/aple/Desktop/project/simple-todo-darkmode/src/components/Alert.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":6,"column":10,"nodeType":"38","messageId":"39","endLine":6,"endColumn":24},{"ruleId":"36","severity":1,"message":"40","line":11,"column":19,"nodeType":"38","messageId":"39","endLine":11,"endColumn":29},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'TiInputChecked' is defined but never used.","Identifier","unusedVar","'setChecked' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]